name: Upload Image To ECR

on:
  push:
    branches:
      - '*deploy/*'

defaults:
  run:
    shell: bash

jobs:

  upload-to-ecr:
    runs-on: ubuntu-latest
    steps:

      - name: Output branch name
        id: vars
        run: |
          export BRANCH=$(echo "${GITHUB_REF#refs/*/}" | sed 's/.*\///')
          echo ::set-output name=branch::$BRANCH
          echo ::set-output name=short_sha::${GITHUB_SHA: -8}
          export DEPLOYMENT=$(echo "${GITHUB_REF#refs/*/}" | sed 's/.*deploy\///')
          echo ::set-output name=deployment::$DEPLOYMENT

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        env:
          SESSION_NAME: ${{ steps.vars.outputs.branch }}-${{ steps.vars.outputs.short_sha }}
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.TEST_AWS_ROLE_TO_ASSUME }}
          role-session-name: ${{ env.SESSION_NAME }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.event.repository.name }}
          DEPLOYMENT_NAME: ${{ steps.vars.outputs.deployment }}
        run: |
          docker build -t ${{ env.DEPLOYMENT_NAME }} -f ./Dockerfile
          # push to remote repository with branch deployment as tag
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.DEPLOYMENT_NAME }}
          # push to remote repository with git sha as tag
          docker tag ${{ env.DEPLOYMENT_NAME }} ${{ github.sha }}
          docker push ${{ github.sha }}
